name: "Windows build, general"
on: [push, pull_request]

env:
  CMAKE_EXTRA_ARGS: "-Dwerr=ON -Dwextra=ON"
  NINJA_BUILD: true
  CACHE_DIR: ${{ github.workspace }}\_cache
  NIH_CACHE_ROOT: ${{ github.workspace }}\_cache\nih_c
  NIH_SRC_PATH: ${{ github.workspace }}/_srccache
  PARALLEL_TESTS: true
  BOOST_TOOLSET: msvc-14.1
  BOOST_URL: 'https://dl.bintray.com/boostorg/release/1.75.0/source/boost_1_75_0.tar.bz2'
  # Alternate download location
  BOOST_URL2: 'https://downloads.sourceforge.net/project/boost/boost/1.75.0/boost_1_75_0.tar.bz2?r=&amp;ts=1594393912&amp;use_mirror=newcontinuum'
  BOOST_CACHE_DIR: ${{ github.workspace }}\_boost_cache
  BOOST_ROOT: ${{ github.workspace }}\_boost_cache\boost_1_75_0
  CMAKE_BOOST: |
    -DCMAKE_PREFIX_PATH=${BOOST_ROOT}\\_INSTALLED_
    -DBOOST_ROOT=${BOOST_ROOT}\\_INSTALLED_
    -DBoost_ROOT=${BOOST_ROOT}\\_INSTALLED_
    -DBoost_DIR=${BOOST_ROOT}\\_INSTALLED_\\lib\\cmake\\Boost-1.75.0
    -DBoost_COMPILER=vc141
    -DCMAKE_VERBOSE_MAKEFILE=ON
    -DCMAKE_TOOLCHAIN_FILE=${VCPKG_DIR}\\scripts\\buildsystems\\vcpkg.cmake
    -DVCPKG_TARGET_TRIPLET=x64-windows-static
  VCPKG_DIR: '/c/vcpkg'
  VCPKG_CACHE_DIR: ${{ github.workspace }}\_vcpkg_cache
  VCPKG_DEFAULT_TRIPLET: "x64-windows-static"
  CC: cl.exe
  CXX: cl.exe
  srcdir: ${{ github.workspace }}\rippled
  builddir: ${{ github.workspace }}\rippled\build\ms
  VCVersion: 'VC2017'
  # 2017 compiler is version 14.16
  # 2019 compiler is version 14.2x
  VC2017: '-vcvars_ver=14.16'
  VC2019: '-vcvars_ver=14.29'
  verbose: ${{ contains(github.event.head_commit.message, 'ci_verbose') }}

jobs:
  windows_cache:
    name: Seed windows cache
    runs-on: windows-runner
    timeout-minutes: 720
    if: ${{ !contains(github.event.head_commit.message, 'ci_run_') || contains(github.event.head_commit.message, 'ci_run_win') }}
    outputs:
      cmakeconfig: ${{ steps.cachekeys.outputs.cmakeconfig }}
      headers: ${{ steps.cachekeys.outputs.headers }}
      source: ${{ steps.cachekeys.outputs.source }}
      instructions: ${{ steps.cachekeys.outputs.instructions }}
      vcpkgver: ${{ steps.cachekeys.outputs.vcpkgver }}
      NUM_PROCESSORS: ${{ steps.cachekeys.outputs.NUM_PROCESSORS }}
    steps:
      - name: Cancel Previous Runs
        # https://github.com/styfle/cancel-workflow-action/tree/0.9.0
        # Note this will not cancel jobs triggered by a pull request event
        # when the PR is created from a fork, even if for the same PR.
        # It works fine within the same fork, and is intended to allow
        # multiple pushes during development without ending up with a
        # huge backlog of jobs.
        if: ${{ !contains(github.event.head_commit.message, 'ci_no_cancel') }}
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: rippled

      - name: Build parameters
        id: cachekeys
        shell: bash
        run: |
          echo "::set-output name=cmakeconfig::${{ hashfiles(
            'rippled/CMakeFiles.txt', 'rippled/Builds/CMake/**',
            'rippled/.github/**/cache-invalidate.txt') }}"
          echo "::set-output name=headers::${{ hashfiles('rippled/src/**/*.h',
            'rippled/src/**/*.hpp', 'rippled/src/**/*.ipp') }}"
          echo "::set-output name=source::${{ hashfiles('rippled/src/**',
            '!rippled/src/**/*.md', '!rippled/src/**/*.uml',
            '!rippled/src/**/*.png', '!rippled/src/**/*.php') }}"
          echo "::set-output name=instructions::${{ hashfiles(
            'rippled/**/windows.yml') }}"
          vcpkgver="2022-03-09-1affd32f93b299d5a907816c328ca3ededb73a7e"
          echo "vcpkg version is 2022-03-09-1affd32f93b299d5a907816c328ca3ededb73a7e"
          echo "::set-output name=vcpkgver::${vcpkgver}"
          export NUM_PROCESSORS=${NUM_PROCESSORS:-$(nproc)}
          echo "NUM PROC is ${NUM_PROCESSORS}"
          echo "::set-output name=NUM_PROCESSORS::${NUM_PROCESSORS}"
      - name: Source cache
        id: srccache
        continue-on-error: true
        uses: actions/cache@v2
        with:
          path: ${{ env.NIH_SRC_PATH}}
          key: ${{ runner.os }}-nihsrc-${{ steps.cachekeys.outputs.cmakeconfig }}-${{ steps.cachekeys.outputs.instructions }}
          restore-keys: |
            ${{ runner.os }}-nihsrc-${{ steps.cachekeys.outputs.cmakeconfig }}-

      - name: Boost cache
        id: boostcache
        uses: actions/cache@v2
        with:
          path: ${{ env.BOOST_CACHE_DIR }}
          key: ${{ runner.os }}-boost-${{ env.BOOST_ROOT }}

      - name: Vcpkg cache
        id: vcpkgcache
        uses: actions/cache@v2
        with:
          path: ${{ env.VCPKG_CACHE_DIR }}
          key: ${{ runner.os }}-vcpkg-${{ steps.cachekeys.outputs.vcpkgver }}-${{ steps.cachekeys.outputs.instructions }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-${{ steps.cachekeys.outputs.vcpkgver }}-
            ${{ runner.os }}-vcpkg-

      - name: Boost parameters
        id: boostkeys
        shell: bash
        run: |
          boost_file_win="${BOOST_CACHE_DIR}\boost.tar.bz2"
          boost_file=$( cygpath --unix "${boost_file_win}" )
          download_boost_file=$( [[ -f ${boost_file} ]] && echo false || echo true )
          echo "boost_file_win is \"${boost_file_win}\""
          echo "boost_file is \"${boost_file}\""
          echo "download_boost_file is \"${download_boost_file}\""
          echo "::set-output name=boost_file_win::${boost_file_win}"
          echo "::set-output name=boost_file::${boost_file}"
          echo "::set-output name=download_boost_file::${download_boost_file}"

      - name: Dump environment
        shell: bash
        run: |
          env
          set | grep =

          [[ "${verbose}" == "true" ]] && \
            time find /c/Program\ Files\ \(x86\)/ -iname 'cl.exe' || true

      - name: Setup cache folders
        shell: bash
        env:
          NUM_PROCESSORS: ${{ steps.cachekeys.outputs.NUM_PROCESSORS }}
        run: |
            mkdir -pv ${CACHE_DIR} ${NIH_CACHE_ROOT} ${BOOST_CACHE_DIR} \
                ${VCPKG_CACHE_DIR} ${NIH_SRC_PATH}

      - name: Download Boost
        # Do this step early so that if the download fails, the job fails fast
        if: ${{ steps.boostkeys.outputs.download_boost_file == 'true' }}
        # Powershell
        shell: pwsh
        run: |
            $Client = New-Object System.Net.WebClient
            $Dest = "${{ steps.boostkeys.outputs.boost_file_win }}"
            try {
                $Url = "$env:BOOST_URL"
                "Attempting to download $Url to $Dest"
                $Client.DownloadFile($Url, $Dest)
                ls "$Dest"
            }
            catch {
                $Url = "$env:BOOST_URL2"
                "Attempting to download $Url to $Dest"
                $Client.DownloadFile($Url, $Dest)
                ls "$Dest"
            }
