name: "Windows build, general"
on: [push, pull_request]

env:
  CMAKE_EXTRA_ARGS: "-Dwerr=ON -Dwextra=ON"
  NINJA_BUILD: true
  CACHE_DIR: ${{ github.workspace }}\_cache
  NIH_CACHE_ROOT: ${{ github.workspace }}\_cache\nih_c
  NIH_SRC_PATH: ${{ github.workspace }}/_srccache
  PARALLEL_TESTS: true
  BOOST_TOOLSET: msvc-14.1
  BOOST_URL: 'https://dl.bintray.com/boostorg/release/1.75.0/source/boost_1_75_0.tar.bz2'
  # Alternate download location
  BOOST_URL2: 'https://downloads.sourceforge.net/project/boost/boost/1.75.0/boost_1_75_0.tar.bz2?r=&amp;ts=1594393912&amp;use_mirror=newcontinuum'
  BOOST_CACHE_DIR: ${{ github.workspace }}\_boost_cache
  BOOST_ROOT: ${{ github.workspace }}\_boost_cache\boost_1_75_0
  CMAKE_BOOST: |
    -DCMAKE_PREFIX_PATH=${BOOST_ROOT}\\_INSTALLED_
    -DBOOST_ROOT=${BOOST_ROOT}\\_INSTALLED_
    -DBoost_ROOT=${BOOST_ROOT}\\_INSTALLED_
    -DBoost_DIR=${BOOST_ROOT}\\_INSTALLED_\\lib\\cmake\\Boost-1.75.0
    -DBoost_COMPILER=vc141
    -DCMAKE_VERBOSE_MAKEFILE=ON
    -DCMAKE_TOOLCHAIN_FILE=${VCPKG_DIR}\\scripts\\buildsystems\\vcpkg.cmake
    -DVCPKG_TARGET_TRIPLET=x64-windows-static
  VCPKG_DIR: '/c/vcpkg'
  VCPKG_CACHE_DIR: ${{ github.workspace }}\_vcpkg_cache
  VCPKG_DEFAULT_TRIPLET: "x64-windows-static"
  CC: cl.exe
  CXX: cl.exe
  srcdir: ${{ github.workspace }}\rippled
  builddir: ${{ github.workspace }}\rippled\build\ms
  VCVersion: 'VC2017'
  # 2017 compiler is version 14.16
  # 2019 compiler is version 14.2x
  VC2017: '-vcvars_ver=14.16'
  VC2019: '-vcvars_ver=14.29'
  verbose: ${{ contains(github.event.head_commit.message, 'ci_verbose') }}

jobs:
  windows_cache:
    name: Seed windows cache
    runs-on: windows-2019
    timeout-minutes: 720
    if: ${{ !contains(github.event.head_commit.message, 'ci_run_') || contains(github.event.head_commit.message, 'ci_run_win') }}
    outputs:
      cmakeconfig: ${{ steps.cachekeys.outputs.cmakeconfig }}
      headers: ${{ steps.cachekeys.outputs.headers }}
      source: ${{ steps.cachekeys.outputs.source }}
      instructions: ${{ steps.cachekeys.outputs.instructions }}
      vcpkgver: ${{ steps.cachekeys.outputs.vcpkgver }}
      NUM_PROCESSORS: ${{ steps.cachekeys.outputs.NUM_PROCESSORS }}
    steps:
      - name: Dump environment
        shell: bash
        run: |
          env
          set | grep =
          echo which
          time find /c/Program\ Files\ \(x86\)/ -iname 'cl.exe' || true

